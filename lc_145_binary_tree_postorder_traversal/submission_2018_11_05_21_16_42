

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
/**
 * Return an array of size *returnSize.
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* postorderTraversal(struct TreeNode* root, int* returnSize) {
 	*returnSize = 0;
 	if(root == NULL) return NULL;
 	struct TreeNode** stack = (struct TreeNode**)malloc(100 * sizeof(struct TreeNode*));
 	int* res = (int*)malloc(10000 * sizeof(int));
 	int top = -1;
 	stack[++top] = root;
 	struct TreeNode* pLast = root;
 	struct TreeNode* pCur = root;
 	while(top != -1){
 		pCur = stack[top];
 		if(pCur->left && pLast != pCur->left && pLast != pCur->right)
 			stack[++top] = pCur->left;
 		else if(pCur->right && pLast != pCur->right)
 			stack[++top] = pCur->right;
 		else{
 			pLast = pCur;
 			res[(*returnSize) ++] = pCur->val;
 			top--;
 		}
 	}
 	free(stack);
 	return res;
}
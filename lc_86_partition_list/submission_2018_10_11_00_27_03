

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* partition(struct ListNode* head, int x) {
    struct ListNode* pbh = NULL, *p = head, *prev = NULL, *bigCur;
    //pbh the first node which value >= x
    //p the traverse pointer
    //prev the node before the pbh
    //bigCur the big node curret
    while(p){
        if(p->val >= x){
            pbh = p;
            break;
        }
        prev = p;
        p = p->next;
    }
    if(!pbh)
        return head;
    bigCur = pbh;
    p = p->next;
    while(p){
        if(p->val < x){
            bigCur->next = p->next;
            p->next = pbh;
            if(!prev)
                head = p;
            else
                prev->next = p;
            prev = p;
        }
        else{
            bigCur = p;
        }
        p = bigCur->next;
    }
    return head;
}
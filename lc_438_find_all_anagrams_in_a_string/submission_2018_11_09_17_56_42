

/**
 * Return an array of size *returnSize.
 * Note: The returned array must be malloced, assume caller calls free().
 */

bool equal(int* a, int* b){
	for (int i = 0; i < 26; ++i)
	{
		if(a[i] != b[i])
			return false;
	}
	return true;
}
int* findAnagrams(char* s, char* p, int* returnSize) {
    *returnSize = 0;
    int window = strlen(p);
    int slen = strlen(s);
    int* res = (int*)malloc(slen * sizeof(int));
    int ht_p[26] = {0};
    int ht_window[26] = {0};
    for(int i = 0; i < window; i++)
        ht_p[p[i] - 'a']++;
    for(int i = 0; i < slen; i++){
        if(i >= window)
            ht_window[s[i - window] - 'a']--;
        ht_window[s[i] - 'a']++;
        
        if(equal(ht_p, ht_window))
            res[(*returnSize)++] = i - window + 1;            
    }
    return res;
}
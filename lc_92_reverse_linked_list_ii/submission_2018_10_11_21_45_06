

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* reverseBetween(struct ListNode* head, int m, int n) {
    if(!head || !head->next || m == n)
        return head;
    struct ListNode* pre = NULL;
    for(int i = 0; i < m - 1; i ++)
        pre = pre?pre->next:head;
    int len = n - m + 1;
    struct ListNode* khead = NULL, *ktail = NULL, *tmp = NULL;
    struct ListNode* p = NULL;
    for(p = pre?pre->next:head; len > 0; len --){
        tmp = p->next;
        p->next = khead;
        khead = p;
        ktail = ktail?ktail:p;
        p = tmp;
    }
    ktail->next = p;
    if(!pre)
        return khead;

    pre->next = khead;
    return head;
}
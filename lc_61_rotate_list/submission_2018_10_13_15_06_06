

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* rotateRight(struct ListNode* head, int k) {
    if(!head)
        return head;
    struct ListNode* fast = head, *slow = head, *tmp;
    //get length
    int len = 0;
    while(fast){
        fast = fast->next;
        len ++;
    }
    fast = head;
    //simplify k
    //note that 0 % n = 0
    k = k % len;
    if(k == 0)
        return head;
    while(k--)
        fast = fast->next;

    // while fast is not the tail
    while(fast->next){
        fast = fast->next;
        slow = slow->next;
    }
    //fast reaches the tail
    tmp = head;
    head = slow->next;
    fast->next = tmp;
    slow->next = NULL;

    return head;
}
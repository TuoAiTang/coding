

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) {
    if(!l1 || !l2)
        return l1?l2:l1;
    int carry = 0;
    int n = 0;
    struct ListNode* head = (struct ListNode*)malloc(sizeof(struct ListNode));
    struct ListNode* tail = head;
    while(l1 || l2){
        struct ListNode* p = (struct ListNode*)malloc(sizeof(struct ListNode));
        n = (l1?l1->val:0) + (l2?l2->val:0) + carry;
        p->val = n % 10;
        p->next = NULL;
        carry = n / 10;
        tail->next = p;
        tail = p;
        l1 = l1?l1->next:l1;
        l2 = l2?l2->next:l2;
    }
    if(carry){
        struct ListNode* p = (struct ListNode*)malloc(sizeof(struct ListNode));
        p->val = 1;
        p->next = NULL;
        tail->next = p;
    }
    return head->next;
}